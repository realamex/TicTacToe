
传统模式
	大家都懂的那种

俄罗斯套娃模式
	双方各有不同大小的棋子若干（暂定6小4中2大，根据井字棋最速胜利需要单边3到5次落子，无法只靠最大棋子获胜，且最大化覆盖后剩2+2+2足够走完棋盘）
	手里的大棋子可以覆盖对方在场的小棋子
	在场的大棋子也可以移位到对方的小棋子头上将其覆盖
	因此需要在格子中记录其中棋子的历史状态（可以考虑做回滚棋子的技能）

胜负判定逻辑（兼容更大棋盘或更长连线规则，比如五子棋）
	利用每个棋子的邻居数据，每次落子（或覆盖对方）时向8方向的半边每个方向及其反方向递归检测邻居N次（默认N=3）
	如果在任意一组正反向检测中碰到大于等于N次有棋子且同色则判定胜利，否则申请和棋
	如果棋盘收到和棋申请后发现棋盘已满，则判定和棋，否则游戏继续（能提前判定和棋，但应该来不及做）


GM Mono单例
	游戏状态（暂停菜单、谁的回合、进行中、结果(胜败平)）

棋盘Mono（核心逻辑所在）
	生成和记录棋盘格碰撞体（带碰撞器捕捉inputsystem的射线）
	记录和控制棋子的实例
	判定胜负并报告GM
	
棋盘格Mono（核心逻辑所在）
	棋子邻居：C#类，记录周围8格情况
	每次落子时根据邻居判断是否获胜，并报告给棋盘
棋子Mono
	棋子的GO（读取Prefab）
	带碰撞，捕捉inputsystem的射线，用于可能的移位操作

玩家控制器单例
	通过镜头射线捕捉棋盘格的碰撞体来落子
NPC控制器单例（AI逻辑所在，与玩家共用棋子的操作接口）
	行为优先级顺序
	0、开局落角，如果对方先落角，则己方落中
	1、当己方已有2子一线,并且该线无第3子时,下第3子取得胜利
	2、当对方已有2子一线,并且该线无第3子时,下第3子阻止对方取得胜利
	3、找到一条线上有且只有自己一个子，然后两个空位上有三种分支方案（随机/优先角/优先非角 先用随机）
	4、随机落子（大概不太会碰到这种情况）
	
	遍历逻辑
	1、横/竖/左斜/右斜 遍历四个方向的所有三连格子组合并缓存（不记录无空位的情况）
	2、在每个格子组合里按上述优先级顺序打分
	3、在最高分的组合里随机选一个操作（可能有并列最高）
	